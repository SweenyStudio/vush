---
import type {ImageMetadata} from "astro";
import CarouselChild from "@components/ui/carousel-child.astro";
import Header from "@components/ui/header.astro";
import Container from "@components/ui/container.astro";

interface Props {
  title: string;
  slides: {
    image: ImageMetadata;
    title: string;
    description: string;
  }[];
  stars?: boolean;
}

const {title, slides, stars} = Astro.props;
---

<section class="relative py-8 lg:py-20">
  <Container>
    <Header title={title} />
  </Container>
  <div
    class="scroll-container scrollbar-hide pl-4 sm:pl-6 md:pl-12 lg:pl-32 flex flex-nowrap flex-shrink-0 overflow-x-scroll relative snap-mandatory snap-x pr-8"
    data-scroll-container
  >
    <div class="flex flex-row py-8 gap-x-6">
      {slides.map((slide) => <CarouselChild {...slide} stars={stars} />)}
    </div>
  </div>
  <Container>
    <div
      class="progress-bar bg-neutral-300 h-1.5 w-full rounded-full"
      data-progress-container
    >
      <div
        class="progress bg-gradient-to-r from-vushOrange via-vushYellow to-vushGreen h-1.5 w-0 rounded-full"
        data-progress-bar
      >
      </div>
    </div>
  </Container>
</section>

<script type="module">
  document.addEventListener("DOMContentLoaded", () => {
    // Select all scroll containers
    const scrollContainers = document.querySelectorAll(
      "[data-scroll-container]"
    );

    scrollContainers.forEach((scrollContainer) => {
      // For each scroll container, find its corresponding progress bar
      const progressBar = scrollContainer.nextElementSibling.querySelector(
        "[data-progress-bar]"
      );

      if (!progressBar) {
        console.error("Progress bar not found for a scroll container");
        return;
      }

      const updateProgressBar = () => {
        const scrollWidth =
          scrollContainer.scrollWidth - scrollContainer.clientWidth;
        const scrollLeft = scrollContainer.scrollLeft;
        const scrollPercent = (scrollLeft / scrollWidth) * 100;
        progressBar.style.width = `${scrollPercent}%`;
      };

      scrollContainer.addEventListener("scroll", updateProgressBar);
    });
  });
</script>
