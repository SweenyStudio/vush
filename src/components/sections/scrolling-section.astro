---
import Container from "@components/ui/container.astro";
import { Image } from "astro:assets";

import Header from "@components/ui/header.astro";

const { title, steps } = Astro.props;
---

<section class="bg-white py-16">
    <Container>
        <Header>
            {title}
        </Header>
        <div
            class="scroll-container scrollbar-hide relative flex flex-shrink-0 snap-x snap-proximity flex-row flex-nowrap items-start overflow-x-scroll"
            data-scroll-container
        >
            <div
                class="gel flex snap-x snap-mandatory flex-row items-start gap-6 py-8"
            >
                {
                    steps.map((step) => (
                        <div class="flex w-96 flex-col items-start justify-start gap-4 text-start">
                            <Image
                                src={step.image}
                                alt={step.title}
                                class="h-full w-full"
                            />
                            <h3 class="font-clearface text-vushBlack text-2xl font-semibold ">
                                {step.title}
                            </h3>
                            <p
                                class="text-sm text-neutral-800  md:text-base"
                                set:html={step.description}
                            />
                        </div>
                    ))
                }
            </div>
        </div>
        <div
            class="progress-bar h-1.5 w-full rounded-full bg-neutral-300"
            data-progress-container
        >
            <div
                class="progress from-vushOrange via-vushYellow to-vushGreen h-1.5 w-0 rounded-full bg-gradient-to-r"
                data-progress-bar
            >
            </div>
        </div>
    </Container>
</section>

<script type="module" is:inline>
    document.addEventListener("DOMContentLoaded", () => {
        // Select all scroll containers
        const scrollContainers = document.querySelectorAll(
            "[data-scroll-container]",
        );

        scrollContainers.forEach((scrollContainer) => {
            // For each scroll container, find its corresponding progress bar
            const progressBar =
                scrollContainer.nextElementSibling.querySelector(
                    "[data-progress-bar]",
                );

            if (!progressBar) {
                console.error("Progress bar not found for a scroll container");
                return;
            }

            const updateProgressBar = () => {
                const scrollWidth =
                    scrollContainer.scrollWidth - scrollContainer.clientWidth;
                const scrollLeft = scrollContainer.scrollLeft;
                const scrollPercent = (scrollLeft / scrollWidth) * 100;
                progressBar.style.width = `${scrollPercent}%`;
            };

            scrollContainer.addEventListener("scroll", updateProgressBar);
        });
    });
</script>
